/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package janelas;

import ClassesAuxiliares.Arrumador;
import ClassesAuxiliares.BancoDeDados;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import objetosBase.triviais.coordenador;
import objetosBase.triviais.ticket;

/**
 *
 * @author SistemaIP
 */
public class GerenciarTickets extends javax.swing.JFrame {

    private final boolean coordenadorGeral;
    private final ArrayList<coordenador> coordenacoes;
    private boolean iniciado = false;

    /**
     * Creates new form GerenciarTickets
     *
     * @param coordenadorGeral Se é da reitoria
     */
    public GerenciarTickets(boolean coordenadorGeral, ArrayList<coordenador> cors) {
        initComponents();
        coordenacoes = cors;
        this.coordenadorGeral = coordenadorGeral;
        this.setLocationRelativeTo(null);
        this.setTitle("Gerenciar Tickets de Cadastro");
        //this.setResizable(false);
        //this.setIconImage(Arrumador.comando().getIcone().getImage());
        this.setVisible(true);
        this.toFront();
        
        if(coordenadorGeral) {
            BancoDeDados.comando().gerarTickets();
        }

        preencherTabela(BancoDeDados.comando().getTickets(coordenadorGeral, cors));

        if (coordenadorGeral) {
            COpcao.setSelected(BancoDeDados.comando().usaCodigoDeCadastro());
        } else {
            COpcao.setSelected(BancoDeDados.comando().unidadeUsaCodigoParaCadastro(coordenacoes.get(0).getUnidadeCodigo()));
             COpcao.setEnabled(false);
        }

        iniciado = true;
    }

    public void preencherTabela(ArrayList<ticket> tickets) {

        String[] colunas;
        String[][] linhas;
        colunas = new String[3];
        linhas = new String[tickets.size()][3];
        int lin = 0;

        colunas[0] = "Código";
        colunas[1] = "Tipo";
        colunas[2] = "Unidade";

        for (int a = 0; a < tickets.size(); a++) {
            linhas[a][0] = tickets.get(a).getCodigo();
            linhas[a][1] = tickets.get(a).getTipo();
            linhas[a][2] = tickets.get(a).getUnidadeNome();
        }

        DefaultTableModel model = new DefaultTableModel(linhas, colunas);
        Table.setModel(model);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        COpcao = new javax.swing.JCheckBox();
        Titulo = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        COpcao.setText("Todos os trabalhos precisam de tickets para serem cadastrados (opcional)");
        COpcao.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                COpcaoStateChanged(evt);
            }
        });
        COpcao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                COpcaoActionPerformed(evt);
            }
        });

        Titulo.setText("Tickets de Cadastro disponíveis");

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(Table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(COpcao, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(Titulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(COpcao)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void COpcaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_COpcaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_COpcaoActionPerformed

    private void COpcaoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_COpcaoStateChanged

        if (!iniciado) {
            return;
        }

        int v;
        if (COpcao.isSelected()) {
            v = 1;
        } else {
            v = 0;
        }

        if (coordenadorGeral) {
            //muda padrão do sistema
            if (BancoDeDados.comando().update("UPDATE valores SET valor1 = " + v + " WHERE rotulo = 'usacodigosdecadastro';") > 0) {
                Titulo.setText("Tickets de Cadastro disponíveis: Atualização na obrigatoriedade geral!");
                BancoDeDados.comando().setUsaCodigoDeCadastro(v>0);
            } else {
                Titulo.setText("Tickets de Cadastro disponíveis: Falha Atualização na obrigatoriedade!");
            }

        } else {

            //muda padrão da unidade
            if (BancoDeDados.comando().update("UPDATE unidade SET usacodigosparacadastro = " + v + " WHERE id = " + coordenacoes.get(0).getUnidadeCodigo() + ";") > 0) {
                Titulo.setText("Tickets de Cadastro disponíveis: Atualização na obrigatoriedade da unidade!");
            } else {
                Titulo.setText("Tickets de Cadastro disponíveis: Falha Atualização na obrigatoriedade!");
            }
            
           

        }


    }//GEN-LAST:event_COpcaoStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GerenciarTickets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GerenciarTickets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GerenciarTickets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GerenciarTickets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                // new GerenciarTickets().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox COpcao;
    private javax.swing.JTable Table;
    private javax.swing.JLabel Titulo;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
